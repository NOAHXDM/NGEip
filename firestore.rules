rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 檢查是否為管理員
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) 
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // 管理員對所有 users 有完全權限
    match /users/{userId} {
      allow read, write, update, delete: if isAdmin();
      
      // 一般用戶僅能操作自己的紀錄
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 1, 3);
    }
  }
}